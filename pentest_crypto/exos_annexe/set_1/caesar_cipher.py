# coding: utf-8

import sys

def caesar_cipher(x,k):
	y = ""
	for i in range(len(x)):
		letter = x[i]
		
		if letter == " ":
			y += " "
		elif not letter.isalpha():
			y += letter
		elif letter.isupper():
			y += chr((ord(letter) + int(k) - 65) % 26 + 65)
		else:
			y += chr((ord(letter) + int(k) - 97) % 26 + 97)
	print(f'Before : {x}')
	print(f'After : {y}')

def caesar_decipher(y):
	for k in range(1,26):
		x = ""
		for i in range(len(y)):
			letter = y[i]
			if letter == " ":
				x += " "
			elif not letter.isalpha():
				x += letter
			elif letter.isupper():
				x += chr((ord(letter) + int(k) - 65) % 26 + 65)
			else:
				x += chr((ord(letter) + int(k) - 97) % 26 + 97)
		print(f'Clef: {k}\nBefore : {x}')

def atbash_decipher(y):
	x = ""
	for char in y:
		if char.isalpha():
			if char.isupper():
				i = ord(char) - 65
				new_i = 25 - i
				x += chr(new_i + 65)
			else:
				i = ord(char) - 97
				new_i = 25 - i
				x += chr(new_i + 97)
		else:
			x += char
	print("After:", x)

def main(nb):
	match nb:
		case "1": caesar_cipher(sys.argv[2], sys.argv[3])
		case "2": caesar_decipher(sys.argv[2])
		case "3": atbash_decipher(sys.argv[2])

if __name__ == "__main__":
	main(sys.argv[1])
