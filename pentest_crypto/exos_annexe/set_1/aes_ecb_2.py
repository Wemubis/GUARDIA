# coding: utf-8

import sys
from collections import Counter

def detect_aes_ecb(file_path):
	with open(file_path, 'r') as f:
		lines = f.readlines()

	ecb_line = None
	max_repeats = 0
	
	for nb_line, hex_line in enumerate(lines):
		# Decode the hex-encoded ciphertext
		y = bytes.fromhex(hex_line.strip())

		# Split the ciphertext into 16-byte blocks
		blocks = [y[i:i + 16] for i in range(0, len(y), 16)]

		# Count occurrences of each block
		block_counts = Counter(blocks)
		repeats = sum(count - 1 for count in block_counts.values() if count > 1)

		if repeats > max_repeats:
			max_repeats = repeats
			ecb_line = (nb_line + 1, hex_line.strip())

	if ecb_line:
		print(f"ECB detected in line {ecb_line[0]} with the ciphertext:")
		print(ecb_line[1])
	else:
		print("No ECB mode encryption detected.")

if __name__ == "__main__":
	x = detect_aes_ecb(sys.argv[1])
	print(x)
